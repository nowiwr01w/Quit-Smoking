plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
}

android {
    compileSdk build_versions.compile_sdk

    defaultConfig {
        applicationId "com.nowiwr01.stop_smoking"
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            file("singing.properties").with { propFile ->
                def debugProperties = new Properties()
                debugProperties.load(new FileInputStream(propFile))

                storeFile file(debugProperties["storeFileRelease"])
                storePassword debugProperties["storePasswordRelease"]
                keyAlias debugProperties["keyAliasRelease"]
                keyPassword debugProperties["keyPasswordRelease"]
            }
        }

        release {
            file("singing.properties").with { propFile ->
                def debugProperties = new Properties()
                debugProperties.load(new FileInputStream(propFile))

                storeFile file(debugProperties["storeFileRelease"])
                storePassword debugProperties["storePasswordRelease"]
                keyAlias debugProperties["keyAliasRelease"]
                keyPassword debugProperties["keyPasswordRelease"]
            }
        }
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}
dependencies {
    implementation project(path: ':data')
    implementation project(path: ':domain')
    implementation project(path: ':baseCoroutines')

    // Base
    implementation deps.core_ktx
    implementation deps.appcompat
    implementation deps.material
    implementation deps.constraintlayout
    implementation deps.circleimageview
    implementation deps.joda
    implementation deps.joda_money
    implementation deps.timber
    implementation deps.viewbinding
    implementation deps.viewbinding_no_reflection
    implementation deps.circularprogressbar
    implementation deps.facebook_shimmer

    // Lifecycle
    implementation deps.lifecycle_viewmodel
    implementation deps.lifecycle_extensions

    // Navigation
    implementation deps.navigation_ui
    implementation deps.navigation_runtime_ktx
    implementation deps.navigation_fragment_ktx

    // Koin
    implementation deps.koin_core
    implementation deps.koin_core_ext
    implementation deps.koin_android
    implementation deps.koin_scope
    implementation deps.koin_viewmodel
    implementation deps.koin_android_ext

    // Coroutines
    implementation deps.coroutines_play_service

    // Room
    implementation deps.room_ktx
    implementation deps.room_runtime
    implementation deps.room_testing
    implementation deps.room_presistance_runtime
    annotationProcessor deps.room_compiler
    kapt deps.room_compiler
    kapt deps.room_presistance_compiler

    // Firebase
    implementation deps.firebase_auth
    implementation deps.firebase_auth_ktx
    implementation deps.firebase_database
    implementation deps.firebase_analytics

    // APIs (VK, Google, AppMetric Facebook)
    implementation deps.vk_api
    implementation deps.vk_core
    implementation deps.google
    implementation deps.facebook
    implementation deps.appmetric

    testImplementation project(path: ':baseTest')
}

